{"version":3,"sources":["actions/tasksActions.js","constants/index.js","actions/userActions.js","lib/getDataAxios.js","lib/constatntDEV.js","containers/eyesUser.jsx","actions/sortActions.js","actions/pageActions.js","components/listTasksComp/logOut.js","components/listTasksComp/headTasks.jsx","components/listTasksComp/sortFunc.js","components/listTasksComp/thead.jsx","components/listTasksComp/findChange.js","components/listTasksComp/tbody.jsx","components/listTasksComp/buttonsPage.jsx","components/listTasksComp/index.jsx","containers/listTasks.jsx","lib/submitLogIn.js","components/logInComp/index.jsx","containers/logIn.jsx","components/notFound/index.jsx","components/createChangeComp/findTask.js","lib/createAxios.js","components/createChangeComp/createTask.jsx","lib/changeAxios.js","components/createChangeComp/changeTask.jsx","components/createChangeComp/index.jsx","containers/createChange.jsx","routes/index.jsx","reducers/page.js","reducers/sort.js","reducers/tasks.js","reducers/user.js","reducers/index.js","store/index.js","index.jsx"],"names":["getData","data","type","payload","getUser","getDataAxios","sortFirld","sortDirection","page","axios","get","then","result","status","message","catch","success","error","localStorage","getItem","connect","store","sort","user","dispatch","useEffect","window","location","pathname","sortField","sortList","choicePage","LogOut","setItem","HeadeTasks","className","to","onClick","logOut","sortFunc","obj","string","Thead","findChange","id","arrChange","JSON","parse","Array","isArray","indexOf","Tbody","tasks","map","item","key","username","email","text","ButtonsPage","totalTaskCount","pageNumbers","i","push","length","ListTasksComp","submitLogIn","e","password","a","preventDefault","form","FormData","append","post","token","LogInComp","useState","disable","setDisable","setError","setSuccess","dataFormUS","setDataFormUS","dataFormPS","setDataFormPS","setTimeout","submit","Object","keys","onSubmit","htmlFor","onChange","target","value","disabled","NotFound","findTask","arr","find","createAXios","CreateTask","history","dataFormEM","setDataFormEM","dataFormTXT","setDataFormTXT","createAxios","changeAxios","ChangeTask","task","dataFormCH","setDataFormCH","arrayChange","stringify","defaultValue","CreateChangeComp","match","params","Routes","exact","path","component","ListTasks","LogIn","CreateChange","initialState","pageReducers","state","action","sortReducers","tasksReducers","total_task_count","userReducers","rootReducer","combineReducers","createStore","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0e20270b.chunk.js","sourcesContent":["import { GET_DATA } from '../constants';\n\nconst getData = (data) => (\n  {\n    type: GET_DATA,\n    payload: data,\n  }\n);\n\nexport default getData;\n","export const GET_DATA = 'GET_DATA';\nexport const GET_USER = 'GET_USER';\nexport const SORT_LIST = 'SORT_LIST';\nexport const CHOICE_PAGE = 'CHOICE_PAGE';\n","import { GET_USER } from '../constants';\n\nconst getUser = (data) => (\n  {\n    type: GET_USER,\n    payload: data,\n  }\n);\n\nexport default getUser;\n","import axios from 'axios';\nimport DEVELOPER from './constatntDEV';\n\nconst getDataAxios = (getData, getUser, sortFirld, sortDirection, page) => {\n  axios.get(`https://uxcandy.com/~shapoval/test-task-backend/v2/?developer=${DEVELOPER}&sort_field=${sortFirld}&sort_direction=${sortDirection}&page=${page}`)\n    .then((result) => {\n      if (result.data.status === 'ok') {\n        getData(result.data.message);\n      }\n    })\n    .catch(() => (\n      {\n        success: false,\n        error: {},\n      }\n    ));\n  if (localStorage.getItem('token')) {\n    getUser(true);\n  }\n};\n\nexport default getDataAxios;\n","const DEVELOPER = 'NKatk';\n\nexport default DEVELOPER;\n","//  Component for handling the first load of urls other than '/' and a possible header\nimport React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport getData from '../actions/tasksActions';\nimport getUser from '../actions/userActions';\nimport getDataAxios from '../lib/getDataAxios';\n\nconst EyesUser = ({\n  sort, page, getUser, getData,\n}) => {\n  useEffect(() => {\n    if (window.location.pathname !== '/') {\n      getDataAxios(getData, getUser, sort.sortField, sort.sortDirection, page);\n    }\n  }, []);// eslint-disable-line\n\n  return (\n    <div>\n      {null}\n    </div>\n  );\n};\n\nconst mapStateTopProps = (store) => (\n  {\n    page: store.page.page,\n    sort: store.sort,\n    user: store.user.user,\n  }\n);\n\nconst mapDispatchToProps = (dispatch) => (\n  {\n    getData: (data) => dispatch(getData(data)),\n    getUser: (data) => dispatch(getUser(data)),\n  }\n);\n\nEyesUser.propTypes = {\n  page: PropTypes.number.isRequired,\n  sort: PropTypes.object.isRequired,// eslint-disable-line\n  getData: PropTypes.func.isRequired,\n  getUser: PropTypes.func.isRequired,\n};\n\n\nexport default connect(\n  mapStateTopProps,\n  mapDispatchToProps,\n)(EyesUser);\n","import { SORT_LIST } from '../constants';\n\nconst sortList = (data) => (\n  {\n    type: SORT_LIST,\n    payload: data,\n  }\n);\n\nexport default sortList;\n","import { CHOICE_PAGE } from '../constants';\n\nconst choicePage = (data) => (\n  {\n    type: CHOICE_PAGE,\n    payload: data,\n  }\n);\n\nexport default choicePage;\n","const LogOut = (getUser) => {\n  localStorage.setItem('token', '');\n  getUser(false);\n};\n\nexport default LogOut;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Plus, LogIn, LogOut } from 'react-feather';\nimport logOut from './logOut';\n\n\nconst HeadeTasks = ({ user, getUser }) => (\n  <div className=\"head-tasks\">\n    <Link to=\"/createchange\"><Plus /></Link>\n    <h1>BeeJee Tasks</h1>\n    {\n      user\n        ? <LogOut onClick={() => logOut(getUser)} />\n        : <Link to=\"/login\"><LogIn /></Link>\n    }\n  </div>\n);\n\n\nexport default HeadeTasks;\n","const sortFunc = (obj, string) => {\n  if (obj.sortField === string) {\n    return (\n      {\n        sortField: string,\n        sortDirection: obj.sortDirection === 'asc' ? 'desc' : 'asc',\n      }\n    );\n  }\n  return (\n    {\n      sortField: string,\n      sortDirection: 'asc',\n    }\n  );\n};\n\nexport default sortFunc;\n","import React from 'react';\nimport {\n  ChevronUp, ChevronDown, X, Check,\n} from 'react-feather';\nimport sortFunc from './sortFunc';\n\nconst Thead = ({\n  sort, user, sortList,\n}) => (\n  <thead>\n    <tr>\n      <th className=\"user-col\">\n        <button\n          type=\"button\"\n          onClick={() => sortList(sortFunc(sort, 'username'))}\n          className={\n            sort.sortField === 'username'\n              ? 'active-button'\n              : null\n          }\n        >\n          <span>Name</span>\n          {\n            sort.sortField === 'username'\n            && (\n              sort.sortDirection === 'asc'\n                ? <ChevronDown />\n                : <ChevronUp />\n            )\n          }\n        </button>\n      </th>\n      <th className=\"email-col\">\n        <button\n          type=\"button\"\n          onClick={() => sortList(sortFunc(sort, 'email'))}\n          className={sort.sortField === 'email' ? 'active-button' : null}\n        >\n          <span>Email</span>\n          {\n            sort.sortField === 'email'\n              && (\n                sort.sortDirection === 'asc'\n                  ? <ChevronDown />\n                  : <ChevronUp />\n              )\n          }\n        </button>\n      </th>\n      <th className=\"text-col\">Task</th>\n      <th className=\"status-col\">\n        <button\n          type=\"button\"\n          onClick={() => sortList(sortFunc(sort, 'status'))}\n          className={sort.sortField === 'status' ? 'active-button' : null}\n        >\n          <span>Status</span>\n          {\n            sort.sortField === 'status'\n              && (\n                sort.sortDirection === 'asc'\n                  ? <X />\n                  : <Check />\n              )\n          }\n        </button>\n      </th>\n      {user ? <th className=\"admin-col\">{null}</th> : null}\n    </tr>\n  </thead>\n);\n\nexport default Thead;\n","const findChange = (id) => {\n  if (!localStorage.getItem('changeTask')) {\n    return false;\n  }\n  const arrChange = JSON.parse(localStorage.getItem('changeTask'));\n  if (!Array.isArray(arrChange)) {\n    return false;\n  }\n  if (arrChange.indexOf(id) === -1) {\n    return false;\n  }\n  return true;\n};\n\nexport default findChange;\n","import React from 'react';\nimport {\n  Edit, Check, X, Info,\n} from 'react-feather';\nimport { Link } from 'react-router-dom';\nimport findChange from './findChange';\n\nconst Tbody = ({ tasks, user }) => (\n  <tbody>\n    {\n      tasks.map((item) => (\n        <tr key={item.id}>\n          <td className=\"user-col\">{item.username}</td>\n          <td className=\"email-col\">{item.email}</td>\n          <td className=\"text-col\">\n            {item.text}\n            {\n              findChange(item.id)\n              && (\n                <p className=\"text-info-change\">\n                  <Info />\n                  <i>Edited by administrator</i>\n                </p>\n              )\n            }\n          </td>\n          <td className=\"status-col\">\n            {\n              item.status\n                ? <Check />\n                : <X />\n            }\n          </td>\n          {\n            user\n              ? <td className=\"admin-col\"><Link to={`/createchange/${item.id}`}><Edit /></Link></td>\n              : null\n          }\n        </tr>\n      ))\n    }\n  </tbody>\n);\n\nexport default Tbody;\n","import React from 'react';\n\nconst ButtonsPage = ({ page, totalTaskCount, choicePage }) => {\n  const pageNumbers = [];\n  if (totalTaskCount > 3) {\n    for (let i = 0; totalTaskCount > i * 3; i++) {\n      pageNumbers.push(i + 1);\n    }\n  }\n\n  return (\n    <div className=\"buttons-page\">\n      {pageNumbers.map((item) => {\n        if (item >= page - 1 && item <= page + 1) {\n          return (\n            <button\n              type=\"button\"\n              className={item === page ? 'active-page' : null}\n              onClick={() => choicePage(item)}\n              key={item}\n            >\n              <span>{item}</span>\n            </button>\n          );\n        }\n        if (\n          item >= page - 2 && item !== 1\n          && item <= page + 2\n          && item !== pageNumbers.length\n        ) {\n          return (\n            <span className=\"dots\" key={item}>...</span>\n          );\n        }\n        if (item === 1 || item === pageNumbers.length) {\n          return (\n            <button\n              type=\"button\"\n              className={item === page ? 'active-page' : null}\n              onClick={() => choicePage(item)}\n              key={item}\n            >\n              <span>{item}</span>\n            </button>\n          );\n        }\n        return null;\n      })}\n    </div>\n  );\n};\n\nexport default ButtonsPage;\n","import React from 'react';\nimport HeadTasks from './headTasks';\nimport Thead from './thead';\nimport Tbody from './tbody';\nimport ButtonsPage from './buttonsPage';\n\nconst ListTasksComp = ({\n  sort, page, tasks, user, sortList, choicePage, getUser,\n}) => (\n  <div className=\"list-task\">\n    <HeadTasks user={user} getUser={getUser} />\n    {\n      !!tasks.tasks.length\n      && (\n        <div className=\"table-task\">\n          <table>\n            <Thead sort={sort} user={user} sortList={sortList} />\n            <Tbody tasks={tasks.tasks} user={user} />\n          </table>\n          <ButtonsPage page={page} totalTaskCount={tasks.totalTaskCount} choicePage={choicePage} />\n        </div>\n      )\n    }\n  </div>\n);\n\nexport default ListTasksComp;\n","import React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport getData from '../actions/tasksActions';\nimport sortList from '../actions/sortActions';\nimport choicePage from '../actions/pageActions';\nimport ListTasksComp from '../components/listTasksComp';\nimport getUser from '../actions/userActions';\nimport getDataAxios from '../lib/getDataAxios';\n\nconst ListTaks = ({\n  page, sort, tasks, user, choicePage, sortList, getData, getUser,\n}) => {\n  useEffect(() => {\n    getDataAxios(getData, getUser, sort.sortField, sort.sortDirection, page);\n  }, [getData, getUser, sort.sortField, sort.sortDirection, page]);\n\n  return (\n    <div>\n      <ListTasksComp\n        page={page}\n        sort={sort}\n        tasks={tasks}\n        user={user}\n        choicePage={choicePage}\n        sortList={sortList}\n        getUser={getUser}\n      />\n    </div>\n  );\n};\n\nconst mapStateTopProps = (store) => (\n  {\n    page: store.page.page,\n    sort: store.sort,\n    tasks: store.tasks,\n    user: store.user.user,\n  }\n);\n\nconst mapDispatchToProps = (dispatch) => (\n  {\n    choicePage: (data) => dispatch(choicePage(data)),\n    sortList: (data) => dispatch(sortList(data)),\n    getData: (data) => dispatch(getData(data)),\n    getUser: (data) => dispatch(getUser(data)),\n  }\n);\n\nListTaks.propTypes = {\n  page: PropTypes.number.isRequired,\n  sort: PropTypes.object.isRequired,// eslint-disable-line\n  tasks: PropTypes.object.isRequired,// eslint-disable-line\n  user: PropTypes.bool.isRequired,\n  choicePage: PropTypes.func.isRequired,\n  sortList: PropTypes.func.isRequired,\n  getData: PropTypes.func.isRequired,\n  getUser: PropTypes.func.isRequired,\n};\n\n\nexport default connect(\n  mapStateTopProps,\n  mapDispatchToProps,\n)(ListTaks);\n","import axios from 'axios';\nimport DEVELOPER from './constatntDEV';\n\nconst submitLogIn = async (e, username, password) => {\n  e.preventDefault();\n  const form = new FormData();\n  form.append('username', username);\n  form.append('password', password);\n  try {\n    const result = await axios.post(`https://uxcandy.com/~shapoval/test-task-backend/v2/login?developer=${DEVELOPER}`, form);\n    if (result.data.status === 'ok') {\n      localStorage.setItem('token', result.data.message.token);\n      return ({\n        success: true,\n        error: {},\n      });\n    }\n    return ({\n      success: false,\n      error: result.data.message,\n    });\n  } catch (e) {\n    return ({\n      success: false,\n      error: {},\n    });\n  }\n};\n\nexport default submitLogIn;\n","import React, { useState } from 'react';\nimport { Redirect, Link } from 'react-router-dom';\nimport { XSquare } from 'react-feather';\nimport submitLogIn from '../../lib/submitLogIn';\n\nconst LogInComp = ({ user, getUser }) => {\n  const [disable, setDisable] = useState(false);\n  const [error, setError] = useState({});\n  const [success, setSuccess] = useState(false);\n  const [dataFormUS, setDataFormUS] = useState('');\n  const [dataFormPS, setDataFormPS] = useState('');\n\n  if (success) {\n    setTimeout(() => {\n      getUser(true);\n    }, 1500);\n  }\n\n  const submit = async (e) => {\n    setDisable(true);\n    const result = await submitLogIn(e, dataFormUS, dataFormPS);\n    setSuccess(result.success);\n    setError(result.error);\n    if (Object.keys(result.error).length) setDisable(false);\n  };\n\n  if (localStorage.getItem('token') && user) {\n    return <Redirect to=\"/\" />;\n  }\n  return (\n    <div className=\"login-block\">\n      <div className=\"link-block\">\n        <Link to=\"/\"><XSquare /></Link>\n      </div>\n      <form className=\"form-block\" onSubmit={submit}>\n        {success && <i className=\"message-info info-success\">Login successfully!</i>}\n        <div>\n          <label htmlFor=\"username\">Name</label>\n          <br />\n          <input\n            id=\"username\"\n            onChange={(e) => setDataFormUS(e.target.value)}\n            type=\"text\"\n          />\n          <br />\n          {error.username && <i className=\"message-info info-error\">{error.username}</i>}\n        </div>\n        <div>\n          <label htmlFor=\"password\">Password</label>\n          <br />\n          <input\n            id=\"password\"\n            onChange={(e) => setDataFormPS(e.target.value)}\n            type=\"password\"\n          />\n          <br />\n          {error.password && <i className=\"message-info info-error\">{error.password}</i>}\n        </div>\n        <div>\n          <button\n            type=\"submit\"\n            disabled={disable}\n          >\n            <span>Enter</span>\n          </button>\n        </div>\n      </form>\n    </div>\n  );\n};\n\nexport default LogInComp;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport getUser from '../actions/userActions';\nimport LogInComp from '../components/logInComp';\n\nconst LogIn = ({\n  user, getUser,\n}) => (\n  <div>\n    <LogInComp\n      user={user}\n      getUser={getUser}\n    />\n  </div>\n);\n\n\nconst mapStateTopProps = (store) => (\n  {\n    user: store.user.user,\n  }\n);\n\nconst mapDispatchToProps = (dispatch) => (\n  {\n    getUser: (data) => dispatch(getUser(data)),\n  }\n);\n\nLogIn.propTypes = {\n  user: PropTypes.bool.isRequired,\n  getUser: PropTypes.func.isRequired,\n};\n\n\nexport default connect(\n  mapStateTopProps,\n  mapDispatchToProps,\n)(LogIn);\n","import React from 'react';\nimport { AlertTriangle } from 'react-feather';\nimport { Link } from 'react-router-dom';\n\nconst NotFound = () => (\n  <div className=\"page-not-found\">\n    <Link to=\"/\">Home</Link>\n    <div><AlertTriangle /></div>\n    <div><span>Page not found!</span></div>\n  </div>\n);\n\nexport default NotFound;\n","const findTask = (id, arr) => (\n  arr.find((item) => +item.id === +id)\n);\n\nexport default findTask;\n","import axios from 'axios';\nimport DEVELOPER from './constatntDEV';\n\nconst createAXios = async (e, username, email, text) => {\n  e.preventDefault();\n  const form = new FormData();\n  form.append('username', username);\n  form.append('email', email);\n  form.append('text', text);\n  return axios.post(`https://uxcandy.com/~shapoval/test-task-backend/v2/create?developer=${DEVELOPER}`, form)\n    .then((result) => {\n      if (result.data.status === 'ok') {\n        return ({\n          success: true,\n          error: {},\n        });\n      }\n      return ({\n        success: false,\n        error: result.data.message,\n      });\n    })\n    .catch(() => (\n      {\n        success: false,\n        error: {},\n      }\n    ));\n};\n\nexport default createAXios;\n","import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { XSquare } from 'react-feather';\nimport createAxios from '../../lib/createAxios';\n\nconst CreateTask = ({ history }) => {\n  const [disable, setDisable] = useState(false);\n  const [success, setSuccess] = useState(false);\n  const [dataFormUS, setDataFormUS] = useState('');\n  const [dataFormEM, setDataFormEM] = useState('');\n  const [dataFormTXT, setDataFormTXT] = useState('');\n  const [error, setError] = useState({});\n\n  const submit = async (e) => {\n    setDisable(true);\n    const result = await createAxios(e, dataFormUS, dataFormEM, dataFormTXT);\n    setSuccess(result.success);\n    setError(result.error);\n    if (Object.keys(result.error).length) setDisable(false);\n  };\n\n  if (success) {\n    setTimeout(() => {\n      history.push('/');\n    }, 1500);\n  }\n\n  return (\n    <div className=\"create-block\">\n      <div className=\"link-block\">\n        <Link to=\"/\"><XSquare /></Link>\n      </div>\n      <form className=\"form-block\" onSubmit={submit}>\n        {success && <i className=\"message-info info-success\">Saved successfully!</i>}\n        <div>\n          <label htmlFor=\"username\">Name</label>\n          <br />\n          <input\n            id=\"username\"\n            onChange={(e) => setDataFormUS(e.target.value)}\n            type=\"text\"\n          />\n          <br />\n          {error.username && <i className=\"message-info info-error\">{error.username}</i>}\n        </div>\n        <div>\n          <label htmlFor=\"email\">Email</label>\n          <br />\n          <input\n            id=\"email\"\n            onChange={(e) => setDataFormEM(e.target.value)}\n            type=\"text\"\n          />\n          <br />\n          {error.email && <i className=\"message-info info-error\">{error.email}</i>}\n        </div>\n        <div>\n          <label htmlFor=\"text\">Task</label>\n          <br />\n          <textarea\n            id=\"text\"\n            onChange={(e) => setDataFormTXT(e.target.value)}\n            type=\"text\"\n          />\n          <br />\n          {error.text && <i className=\"message-info info-error\">{error.text}</i>}\n        </div>\n        <button\n          type=\"submit\"\n          disabled={disable}\n        >\n          <span>Save</span>\n        </button>\n      </form>\n    </div>\n  );\n};\n\nexport default CreateTask;\n","import axios from 'axios';\nimport DEVELOPER from './constatntDEV';\n\nconst changeAxios = async (e, text, status, id) => {\n  e.preventDefault();\n  const form = new FormData();\n  form.append('text', text);\n  form.append('status', status ? 10 : 0);\n  form.append('token', localStorage.getItem('token'));\n  return axios.post(`https://uxcandy.com/~shapoval/test-task-backend/v2/edit/${id}?developer=${DEVELOPER}`, form)\n    .then((result) => {\n      if (result.data.status === 'ok') {\n        return ({\n          success: true,\n          error: {},\n        });\n      }\n      return ({\n        success: false,\n        error: result.data.message,\n      });\n    })\n    .catch(() => (\n      {\n        success: false,\n        error: {},\n      }\n    ));\n};\n\nexport default changeAxios;\n","import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { XSquare, Square, CheckSquare } from 'react-feather';\nimport changeAxios from '../../lib/changeAxios';\nimport findChange from '../listTasksComp/findChange';\n\nconst ChangeTask = ({ history, task, getUser }) => {\n  const [disable, setDisable] = useState(false);\n  const [success, setSuccess] = useState(false);\n  const [error, setError] = useState({});\n  const [dataFormTXT, setDataFormTXT] = useState(task.text);\n  const [dataFormCH, setDataFormCH] = useState(!!task.status);\n\n  const submit = async (e) => {\n    setDisable(true);\n    const result = await changeAxios(e, dataFormTXT, dataFormCH, task.id);\n    setSuccess(result.success);\n    setError(result.error);\n    if (Object.keys(result.error).length) setDisable(false);\n  };\n\n  if (success) {\n    if (task.text !== dataFormTXT && dataFormTXT !== '') {\n      const arrayChange = (\n        Array.isArray(JSON.parse(localStorage.getItem('changeTask')))\n          ? JSON.parse(localStorage.getItem('changeTask'))\n          : []\n      );\n      if (!findChange(task.id)) {\n        arrayChange.push(task.id);\n        localStorage.setItem('changeTask', JSON.stringify(arrayChange));\n      }\n    }\n    setTimeout(() => {\n      history.push('/');\n    }, 1500);\n  }\n\n  if (error.token) {\n    setTimeout(() => {\n      localStorage.setItem('token', '');\n      getUser(false);\n      history.push('/login');\n    }, 0);\n  }\n\n  return (\n    <div className=\"change-block\">\n      <div className=\"link-block\">\n        <Link to=\"/\"><XSquare /></Link>\n      </div>\n      <form className=\"form-block\" onSubmit={submit}>\n        {success && <i className=\"message-info info-success\">Saved successfully!</i>}\n        <div>\n          <label htmlFor=\"username\">Name</label>\n          <br />\n          <input\n            id=\"username\"\n            type=\"text\"\n            defaultValue={task.username}\n            disabled\n          />\n          <br />\n        </div>\n        <div>\n          <label htmlFor=\"email\">Email</label>\n          <br />\n          <input\n            id=\"email\"\n            type=\"text\"\n            defaultValue={task.email}\n            disabled\n          />\n          <br />\n        </div>\n        <div>\n          <label htmlFor=\"text\">Task</label>\n          <br />\n          <textarea\n            id=\"text\"\n            onChange={(e) => setDataFormTXT(e.target.value)}\n            type=\"text\"\n            defaultValue={dataFormTXT}\n          />\n          <br />\n          {error.text && <i className=\"message-info info-error\">{error.text}</i>}\n        </div>\n        <div className=\"checkbox\">\n          <label htmlFor=\"status\">Status</label>\n          <div>\n            {\n              dataFormCH\n                ? <CheckSquare onClick={() => setDataFormCH(false)} />\n                : <Square onClick={() => setDataFormCH(true)} />\n            }\n          </div>\n        </div>\n        <button\n          type=\"submit\"\n          disabled={disable}\n        >\n          <span>Save</span>\n        </button>\n      </form>\n    </div>\n  );\n};\n\nexport default ChangeTask;\n","import React from 'react';\nimport { Redirect } from 'react-router-dom';\n\nimport NotFound from '../notFound';\nimport findTask from './findTask';\nimport CreateTask from './createTask';\nimport ChangeTask from './changeTask';\n\nconst CreateChangeComp = ({\n  history, match, tasks, user, getUser,\n}) => {\n  if (match.params.id) {\n    if (match.params.id && tasks.tasks.length) {\n      if (user) {\n        const task = findTask(match.params.id, tasks.tasks);\n        if (task) {\n          return (\n            <ChangeTask\n              history={history}\n              task={task}\n              getUser={getUser}\n            />\n          );\n        }\n        return <NotFound />;\n      }\n      return <Redirect to=\"/login\" />;\n    }\n    return <div> </div>;\n  }\n  return <CreateTask history={history} />;\n};\n\nexport default CreateChangeComp;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport getUser from '../actions/userActions';\nimport CreateChangeComp from '../components/createChangeComp';\n\nconst CreateChange = ({\n  history, match, tasks, user, getUser,\n}) => (\n  <div>\n    <CreateChangeComp\n      history={history}\n      match={match}\n      tasks={tasks}\n      user={user}\n      getUser={getUser}\n    />\n  </div>\n);\n\nconst mapStateTopProps = (store) => ({\n  tasks: store.tasks,\n  user: store.user.user,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  getUser: (data) => dispatch(getUser(data)),\n});\n\nCreateChange.propTypes = {\n  tasks: PropTypes.object.isRequired,//eslint-disable-line\n  user: PropTypes.bool.isRequired,\n  getUser: PropTypes.func.isRequired,\n};\n\nexport default connect(\n  mapStateTopProps,\n  mapDispatchToProps,\n)(CreateChange);\n","import React from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\n\nimport EyesUser from '../containers/eyesUser';\nimport ListTasks from '../containers/listTasks';\nimport LogIn from '../containers/logIn';\nimport CreateChange from '../containers/createChange';\nimport NotFound from '../components/notFound';\n\nconst Routes = () => (\n  <BrowserRouter>\n    <EyesUser />\n    <Switch>\n      <Route exact path=\"/\" component={ListTasks} />\n      <Route exact path=\"/login\" component={LogIn} />\n      <Route exact path=\"/createchange/:id?\" component={CreateChange} />\n      <Route path=\"/*\" component={NotFound} />\n    </Switch>\n  </BrowserRouter>\n);\n\nexport default Routes;\n","import { CHOICE_PAGE } from '../constants';\n\nconst initialState = {\n  page: 1,\n};\n\nconst pageReducers = (state = initialState, action) => {\n  switch (action.type) {\n    case CHOICE_PAGE:\n      return {\n        ...state,\n        page: action.payload,\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default pageReducers;\n","import { SORT_LIST } from '../constants';\n\nconst initialState = {\n  sortField: 'username',\n  sortDirection: 'asc',\n};\n\nconst sortReducers = (state = initialState, action) => {\n  switch (action.type) {\n    case SORT_LIST:\n      return {\n        ...state,\n        sortField: action.payload.sortField,\n        sortDirection: action.payload.sortDirection,\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default sortReducers;\n","import { GET_DATA } from '../constants';\n\nconst initialState = {\n  tasks: [],\n  totalTaskCount: 0,\n};\n\nconst tasksReducers = (state = initialState, action) => {\n  switch (action.type) {\n    case GET_DATA:\n      return {\n        ...state,\n        tasks: action.payload.tasks,\n        totalTaskCount: action.payload.total_task_count,\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default tasksReducers;\n","import { GET_USER } from '../constants';\n\nconst initialState = {\n  user: false,\n};\n\nconst userReducers = (state = initialState, action) => {\n  switch (action.type) {\n    case GET_USER:\n      return {\n        ...state,\n        user: action.payload,\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default userReducers;\n","import { combineReducers } from 'redux';\n\nimport pageReducers from './page';\nimport sortReducers from './sort';\nimport tasksReducers from './tasks';\nimport userReducers from './user';\n\nconst rootReducer = combineReducers({\n  page: pageReducers,\n  sort: sortReducers,\n  tasks: tasksReducers,\n  user: userReducers,\n});\n\nexport default rootReducer;\n","import { createStore } from 'redux';\nimport rootReducer from '../reducers';\n\nconst store = createStore(rootReducer);\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport Routes from './routes';\nimport store from './store';\n\nimport './index.scss';\n\nReactDOM.render(\n  <Provider store={store}>\n    <Routes />\n  </Provider>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}